# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    mailer_user: reda.daif.8@gmail.com
    sender_name: reda daif
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    my_converter:
        class: App\Converter\PatientConverter
        tags:
            - { name: request.param_converter, priority: -2, converter: PatientConverter }

    App\Exception\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    App\DataLayer\PatientDAO : ~
    App\DataLayer\PatientDAOFile : ~
    App\DataLayer\PatientDAOExcel : ~
    App\Contrat\IPatientDAO : '@App\DataLayer\PatientDAO'


    App\ServiceLayer\PatientService : ~
    App\ServiceLayer\PatientServiceFile : ~
    App\ServiceLayer\PatientServiceExcel : ~
    App\Contrat\IPatientService : '@App\ServiceLayer\PatientService'


    App\Security\WsseProvider:
        arguments:
            $cachePool: '@cache.app'
        public: false


    App\Controller\TokenController:
        arguments: ['@lexik_jwt_authentication.jwt_manager']


    patient.listener:
        class: App\ListenerLayer\PatientRequestListener
        tags:
            - { name: kernel.event_listener, event : patient.request.event , method : onPatientRequestEvent }

    fournisseur.listener:
        class: App\ListenerLayer\FournisseurRequestListener
        tags:
             - { name: kernel.event_listener, event : fournisseur.request.event , method : onFournisseurRequestEvent }
